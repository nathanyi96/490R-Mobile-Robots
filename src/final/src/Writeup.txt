Algorithm. For optimal path planning, we used a greedy algorithm that uses the Euclidean distance metric to determine the order that the waypoint goals should be navigated. Afterwards, we use Dubins path planning algorithm to generate waypoints for paths between goal waypoints. Furthermore, we use cubic splining for curvature between goal waypoints to determine optimal orientation and curvature for Dubins path planning.

Implementation. We implemented a ROS path planner node that handles multiple waypoint goal path planning. It plans a path between the starting point and first goal waypoint and calls on the controller node to navigate through the path. While the racecar is navigating the first path, the ROS path planner node plans the rest of the paths between waypoints that are later sent to the controller node to navigate through.
